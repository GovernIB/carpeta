/*
 * API Interna NOTIB
 * API Interna de NOTIB
 *
 * OpenAPI spec version: v2.0
 * Contact: limit@limit.es
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package org.fundaciobit.pluginsib.carpetafront.notib2client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
/**
 * Objecte amb les dades necessàries per consultar les dades de registre d&#x27;una notificació o enviament
 */
@Schema(description = "Objecte amb les dades necessàries per consultar les dades de registre d'una notificació o enviament")


public class DadesConsulta {
  @JsonProperty("identificador")
  private String identificador = null;

  @JsonProperty("referencia")
  private String referencia = null;

  @JsonProperty("ambJustificant")
  private String ambJustificant = null;

  public DadesConsulta identificador(String identificador) {
    this.identificador = identificador;
    return this;
  }

   /**
   * Identificador únic de la notificació a consultar  * Camp mantingut únicament per compatibilitat amb versions antigues  * S&#x27;ha d&#x27;indicar un idientificador o una referència. En cas d&#x27;informar ambdós, només es tindrà en compte l&#x27;identificador. Es recomana cercar sempre per referència
   * @return identificador
  **/
  @Schema(example = "00000000-0000-0000-0000-000000000000", description = "Identificador únic de la notificació a consultar  * Camp mantingut únicament per compatibilitat amb versions antigues  * S'ha d'indicar un idientificador o una referència. En cas d'informar ambdós, només es tindrà en compte l'identificador. Es recomana cercar sempre per referència")
  public String getIdentificador() {
    return identificador;
  }

  public void setIdentificador(String identificador) {
    this.identificador = identificador;
  }

  public DadesConsulta referencia(String referencia) {
    this.referencia = referencia;
    return this;
  }

   /**
   * Referència (identificador) única de l&#x27;enviament que es vol consultar  * S&#x27;ha d&#x27;indicar un idientificador o una referència. En cas d&#x27;informar ambdós, només es tindrà en compte l&#x27;identificador.  * Es recomana cercar sempre per referència
   * @return referencia
  **/
  @Schema(example = "00000000-0000-0000-0000-000000000000", description = "Referència (identificador) única de l'enviament que es vol consultar  * S'ha d'indicar un idientificador o una referència. En cas d'informar ambdós, només es tindrà en compte l'identificador.  * Es recomana cercar sempre per referència")
  public String getReferencia() {
    return referencia;
  }

  public void setReferencia(String referencia) {
    this.referencia = referencia;
  }

  public DadesConsulta ambJustificant(String ambJustificant) {
    this.ambJustificant = ambJustificant;
    return this;
  }

   /**
   * Indica si a la resposta s&#x27;ha d&#x27;incloure el justificant de registre
   * @return ambJustificant
  **/
  @Schema(example = "true", description = "Indica si a la resposta s'ha d'incloure el justificant de registre")
  public String getAmbJustificant() {
    return ambJustificant;
  }

  public void setAmbJustificant(String ambJustificant) {
    this.ambJustificant = ambJustificant;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DadesConsulta dadesConsulta = (DadesConsulta) o;
    return Objects.equals(this.identificador, dadesConsulta.identificador) &&
        Objects.equals(this.referencia, dadesConsulta.referencia) &&
        Objects.equals(this.ambJustificant, dadesConsulta.ambJustificant);
  }

  @Override
  public int hashCode() {
    return Objects.hash(identificador, referencia, ambJustificant);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DadesConsulta {\n");
    
    sb.append("    identificador: ").append(toIndentedString(identificador)).append("\n");
    sb.append("    referencia: ").append(toIndentedString(referencia)).append("\n");
    sb.append("    ambJustificant: ").append(toIndentedString(ambJustificant)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
