/*
 * API Interna NOTIB
 * API Interna de NOTIB
 *
 * OpenAPI spec version: v2.0
 * Contact: limit@limit.es
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package org.fundaciobit.pluginsib.carpetafront.notib2client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
import org.fundaciobit.pluginsib.carpetafront.notib2client.model.DocumentV2;
import org.fundaciobit.pluginsib.carpetafront.notib2client.model.Enviament;
import org.joda.time.DateTime;
/**
 * Objecte amb les dades necessàries per a donar d&#x27;alta una notificació
 */
@Schema(description = "Objecte amb les dades necessàries per a donar d'alta una notificació")


public class NotificacioV2 {
  @JsonProperty("emisorDir3Codi")
  private String emisorDir3Codi = null;

  @JsonProperty("organGestor")
  private String organGestor = null;

  /**
   * Enumerat que indica si l’enviament és una comunicació o una notificació
   */
  public enum EnviamentTipusEnum {
    NOTIFICACIO("NOTIFICACIO"),
    COMUNICACIO("COMUNICACIO"),
    SIR("SIR");

    private String value;

    EnviamentTipusEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static EnviamentTipusEnum fromValue(String input) {
      for (EnviamentTipusEnum b : EnviamentTipusEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("enviamentTipus")
  private EnviamentTipusEnum enviamentTipus = EnviamentTipusEnum.COMUNICACIO;

  @JsonProperty("concepte")
  private String concepte = null;

  @JsonProperty("descripcio")
  private String descripcio = null;

  @JsonProperty("enviamentDataProgramada")
  private DateTime enviamentDataProgramada = null;

  @JsonProperty("retard")
  private Integer retard = null;

  @JsonProperty("caducitat")
  private DateTime caducitat = null;

  @JsonProperty("caducitatDiesNaturals")
  private Integer caducitatDiesNaturals = null;

  @JsonProperty("usuariCodi")
  private String usuariCodi = null;

  @JsonProperty("procedimentCodi")
  private String procedimentCodi = null;

  @JsonProperty("grupCodi")
  private String grupCodi = null;

  @JsonProperty("numExpedient")
  private String numExpedient = null;

  @JsonProperty("enviaments")
  private List<Enviament> enviaments = new ArrayList<Enviament>();

  /**
   * Enumerat que indica l’idioma de la notificació
   */
  public enum IdiomaEnum {
    CA("CA"),
    ES("ES");

    private String value;

    IdiomaEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static IdiomaEnum fromValue(String input) {
      for (IdiomaEnum b : IdiomaEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("idioma")
  private IdiomaEnum idioma = IdiomaEnum.CA;

  @JsonProperty("document")
  private DocumentV2 document = null;

  @JsonProperty("document2")
  private DocumentV2 document2 = null;

  @JsonProperty("document3")
  private DocumentV2 document3 = null;

  @JsonProperty("document4")
  private DocumentV2 document4 = null;

  @JsonProperty("document5")
  private DocumentV2 document5 = null;

  public NotificacioV2 emisorDir3Codi(String emisorDir3Codi) {
    this.emisorDir3Codi = emisorDir3Codi;
    return this;
  }

   /**
   * Codi Dir3 de l’organisme emisor (Entitat de Notib)
   * @return emisorDir3Codi
  **/
  @Schema(example = "A04003003", required = true, description = "Codi Dir3 de l’organisme emisor (Entitat de Notib)")
  public String getEmisorDir3Codi() {
    return emisorDir3Codi;
  }

  public void setEmisorDir3Codi(String emisorDir3Codi) {
    this.emisorDir3Codi = emisorDir3Codi;
  }

  public NotificacioV2 organGestor(String organGestor) {
    this.organGestor = organGestor;
    return this;
  }

   /**
   * Codi DIR3 de l’òrgan gestor que realitza la notificació/comunicació.  * Obligatori en el cas de procediments comuns.  * En el cas de notificacions de procediments no comuns, no s&#x27;utilitzarà aquest camp, sinó que s’utilitzarà l’òrgan gestor al que pertany el procediment.
   * @return organGestor
  **/
  @Schema(example = "A04035965", description = "Codi DIR3 de l’òrgan gestor que realitza la notificació/comunicació.  * Obligatori en el cas de procediments comuns.  * En el cas de notificacions de procediments no comuns, no s'utilitzarà aquest camp, sinó que s’utilitzarà l’òrgan gestor al que pertany el procediment.")
  public String getOrganGestor() {
    return organGestor;
  }

  public void setOrganGestor(String organGestor) {
    this.organGestor = organGestor;
  }

  public NotificacioV2 enviamentTipus(EnviamentTipusEnum enviamentTipus) {
    this.enviamentTipus = enviamentTipus;
    return this;
  }

   /**
   * Enumerat que indica si l’enviament és una comunicació o una notificació
   * @return enviamentTipus
  **/
  @Schema(example = "NOTIFICACIO", required = true, description = "Enumerat que indica si l’enviament és una comunicació o una notificació")
  public EnviamentTipusEnum getEnviamentTipus() {
    return enviamentTipus;
  }

  public void setEnviamentTipus(EnviamentTipusEnum enviamentTipus) {
    this.enviamentTipus = enviamentTipus;
  }

  public NotificacioV2 concepte(String concepte) {
    this.concepte = concepte;
    return this;
  }

   /**
   * Concepte de l’enviament.   * Si ha d’anar a CIE només s’agafaran els 50 primers caràcters
   * @return concepte
  **/
  @Schema(example = "Concepte de la notificació", required = true, description = "Concepte de l’enviament.   * Si ha d’anar a CIE només s’agafaran els 50 primers caràcters")
  public String getConcepte() {
    return concepte;
  }

  public void setConcepte(String concepte) {
    this.concepte = concepte;
  }

  public NotificacioV2 descripcio(String descripcio) {
    this.descripcio = descripcio;
    return this;
  }

   /**
   * Descripció detallada de l’enviament
   * @return descripcio
  **/
  @Schema(example = "Descripció de la notificació", description = "Descripció detallada de l’enviament")
  public String getDescripcio() {
    return descripcio;
  }

  public void setDescripcio(String descripcio) {
    this.descripcio = descripcio;
  }

  public NotificacioV2 enviamentDataProgramada(DateTime enviamentDataProgramada) {
    this.enviamentDataProgramada = enviamentDataProgramada;
    return this;
  }

   /**
   * Data en la que l’enviament es posarà a disposició per a la compareixença.  * En cas de no informar-se es posarà en disposició per a la compareixença de forma inmediata.  El format de la data serà del tipus yyyy-MM-dd
   * @return enviamentDataProgramada
  **/
  @Schema(description = "Data en la que l’enviament es posarà a disposició per a la compareixença.  * En cas de no informar-se es posarà en disposició per a la compareixença de forma inmediata.  El format de la data serà del tipus yyyy-MM-dd")
  public DateTime getEnviamentDataProgramada() {
    return enviamentDataProgramada;
  }

  public void setEnviamentDataProgramada(DateTime enviamentDataProgramada) {
    this.enviamentDataProgramada = enviamentDataProgramada;
  }

  public NotificacioV2 retard(Integer retard) {
    this.retard = retard;
    return this;
  }

   /**
   * Dies que l’enviament estarà a disposició de compareixença en carpeta abans d’entregar-lo per altres mitjans
   * @return retard
  **/
  @Schema(example = "5", description = "Dies que l’enviament estarà a disposició de compareixença en carpeta abans d’entregar-lo per altres mitjans")
  public Integer getRetard() {
    return retard;
  }

  public void setRetard(Integer retard) {
    this.retard = retard;
  }

  public NotificacioV2 caducitat(DateTime caducitat) {
    this.caducitat = caducitat;
    return this;
  }

   /**
   * Data d’expiració de l’enviament.  * Aquest camp és excloent amb el de caducitatDiesNaturals. Només s&#x27;ha d&#x27;indicar un dels dos. En cas d&#x27;informar els dos, s&#x27;ignorarà el camp caducitatDiesNaturals.  * Aquest camp és obligatori per notificacions i opcional per a comunicacions.  El format de la data serà del tipus yyyy-MM-dd
   * @return caducitat
  **/
  @Schema(description = "Data d’expiració de l’enviament.  * Aquest camp és excloent amb el de caducitatDiesNaturals. Només s'ha d'indicar un dels dos. En cas d'informar els dos, s'ignorarà el camp caducitatDiesNaturals.  * Aquest camp és obligatori per notificacions i opcional per a comunicacions.  El format de la data serà del tipus yyyy-MM-dd")
  public DateTime getCaducitat() {
    return caducitat;
  }

  public void setCaducitat(DateTime caducitat) {
    this.caducitat = caducitat;
  }

  public NotificacioV2 caducitatDiesNaturals(Integer caducitatDiesNaturals) {
    this.caducitatDiesNaturals = caducitatDiesNaturals;
    return this;
  }

   /**
   * Dies naturals abans que expiri l&#x27;enviament  * Aquest camp és excloent amb el de caducitat. Només s&#x27;ha d&#x27;indicar un dels dos. En cas d&#x27;informar els dos, aquest s&#x27;ignorarà.
   * @return caducitatDiesNaturals
  **/
  @Schema(example = "10", description = "Dies naturals abans que expiri l'enviament  * Aquest camp és excloent amb el de caducitat. Només s'ha d'indicar un dels dos. En cas d'informar els dos, aquest s'ignorarà.")
  public Integer getCaducitatDiesNaturals() {
    return caducitatDiesNaturals;
  }

  public void setCaducitatDiesNaturals(Integer caducitatDiesNaturals) {
    this.caducitatDiesNaturals = caducitatDiesNaturals;
  }

  public NotificacioV2 usuariCodi(String usuariCodi) {
    this.usuariCodi = usuariCodi;
    return this;
  }

   /**
   * Codi de l’usuari que està realitzant la notificació. Aquest usuari s&#x27;utilitzarà per a realitzar l&#x27;assentament registral de sortida
   * @return usuariCodi
  **/
  @Schema(example = "u000000", required = true, description = "Codi de l’usuari que està realitzant la notificació. Aquest usuari s'utilitzarà per a realitzar l'assentament registral de sortida")
  public String getUsuariCodi() {
    return usuariCodi;
  }

  public void setUsuariCodi(String usuariCodi) {
    this.usuariCodi = usuariCodi;
  }

  public NotificacioV2 procedimentCodi(String procedimentCodi) {
    this.procedimentCodi = procedimentCodi;
    return this;
  }

   /**
   * Identificador del procediment SIA al que pertany la notificació. Obligatori en el cas de notificacions
   * @return procedimentCodi
  **/
  @Schema(example = "666666", description = "Identificador del procediment SIA al que pertany la notificació. Obligatori en el cas de notificacions")
  public String getProcedimentCodi() {
    return procedimentCodi;
  }

  public void setProcedimentCodi(String procedimentCodi) {
    this.procedimentCodi = procedimentCodi;
  }

  public NotificacioV2 grupCodi(String grupCodi) {
    this.grupCodi = grupCodi;
    return this;
  }

   /**
   * Codi del grup al que s’assigna la notificació.  * Aquest camp només té sentit quan es vol donar d’alta una notificació que s’ha configurat amb grups a Notifica (veure manual d’usuari)
   * @return grupCodi
  **/
  @Schema(example = "NOT_DG_DESTECNOLOGIC", description = "Codi del grup al que s’assigna la notificació.  * Aquest camp només té sentit quan es vol donar d’alta una notificació que s’ha configurat amb grups a Notifica (veure manual d’usuari)")
  public String getGrupCodi() {
    return grupCodi;
  }

  public void setGrupCodi(String grupCodi) {
    this.grupCodi = grupCodi;
  }

  public NotificacioV2 numExpedient(String numExpedient) {
    this.numExpedient = numExpedient;
    return this;
  }

   /**
   * Identificador de l&#x27;expedient al qual pertany la notificació
   * @return numExpedient
  **/
  @Schema(example = "123/2023", description = "Identificador de l'expedient al qual pertany la notificació")
  public String getNumExpedient() {
    return numExpedient;
  }

  public void setNumExpedient(String numExpedient) {
    this.numExpedient = numExpedient;
  }

  public NotificacioV2 enviaments(List<Enviament> enviaments) {
    this.enviaments = enviaments;
    return this;
  }

  public NotificacioV2 addEnviamentsItem(Enviament enviamentsItem) {
    this.enviaments.add(enviamentsItem);
    return this;
  }

   /**
   * Llista d&#x27;enviaments continguts en la Notificació/Comunicació
   * @return enviaments
  **/
  @Schema(required = true, description = "Llista d'enviaments continguts en la Notificació/Comunicació")
  public List<Enviament> getEnviaments() {
    return enviaments;
  }

  public void setEnviaments(List<Enviament> enviaments) {
    this.enviaments = enviaments;
  }

  public NotificacioV2 idioma(IdiomaEnum idioma) {
    this.idioma = idioma;
    return this;
  }

   /**
   * Enumerat que indica l’idioma de la notificació
   * @return idioma
  **/
  @Schema(example = "ES", description = "Enumerat que indica l’idioma de la notificació")
  public IdiomaEnum getIdioma() {
    return idioma;
  }

  public void setIdioma(IdiomaEnum idioma) {
    this.idioma = idioma;
  }

  public NotificacioV2 document(DocumentV2 document) {
    this.document = document;
    return this;
  }

   /**
   * Get document
   * @return document
  **/
  @Schema(required = true, description = "")
  public DocumentV2 getDocument() {
    return document;
  }

  public void setDocument(DocumentV2 document) {
    this.document = document;
  }

  public NotificacioV2 document2(DocumentV2 document2) {
    this.document2 = document2;
    return this;
  }

   /**
   * Get document2
   * @return document2
  **/
  @Schema(description = "")
  public DocumentV2 getDocument2() {
    return document2;
  }

  public void setDocument2(DocumentV2 document2) {
    this.document2 = document2;
  }

  public NotificacioV2 document3(DocumentV2 document3) {
    this.document3 = document3;
    return this;
  }

   /**
   * Get document3
   * @return document3
  **/
  @Schema(description = "")
  public DocumentV2 getDocument3() {
    return document3;
  }

  public void setDocument3(DocumentV2 document3) {
    this.document3 = document3;
  }

  public NotificacioV2 document4(DocumentV2 document4) {
    this.document4 = document4;
    return this;
  }

   /**
   * Get document4
   * @return document4
  **/
  @Schema(description = "")
  public DocumentV2 getDocument4() {
    return document4;
  }

  public void setDocument4(DocumentV2 document4) {
    this.document4 = document4;
  }

  public NotificacioV2 document5(DocumentV2 document5) {
    this.document5 = document5;
    return this;
  }

   /**
   * Get document5
   * @return document5
  **/
  @Schema(description = "")
  public DocumentV2 getDocument5() {
    return document5;
  }

  public void setDocument5(DocumentV2 document5) {
    this.document5 = document5;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NotificacioV2 notificacioV2 = (NotificacioV2) o;
    return Objects.equals(this.emisorDir3Codi, notificacioV2.emisorDir3Codi) &&
        Objects.equals(this.organGestor, notificacioV2.organGestor) &&
        Objects.equals(this.enviamentTipus, notificacioV2.enviamentTipus) &&
        Objects.equals(this.concepte, notificacioV2.concepte) &&
        Objects.equals(this.descripcio, notificacioV2.descripcio) &&
        Objects.equals(this.enviamentDataProgramada, notificacioV2.enviamentDataProgramada) &&
        Objects.equals(this.retard, notificacioV2.retard) &&
        Objects.equals(this.caducitat, notificacioV2.caducitat) &&
        Objects.equals(this.caducitatDiesNaturals, notificacioV2.caducitatDiesNaturals) &&
        Objects.equals(this.usuariCodi, notificacioV2.usuariCodi) &&
        Objects.equals(this.procedimentCodi, notificacioV2.procedimentCodi) &&
        Objects.equals(this.grupCodi, notificacioV2.grupCodi) &&
        Objects.equals(this.numExpedient, notificacioV2.numExpedient) &&
        Objects.equals(this.enviaments, notificacioV2.enviaments) &&
        Objects.equals(this.idioma, notificacioV2.idioma) &&
        Objects.equals(this.document, notificacioV2.document) &&
        Objects.equals(this.document2, notificacioV2.document2) &&
        Objects.equals(this.document3, notificacioV2.document3) &&
        Objects.equals(this.document4, notificacioV2.document4) &&
        Objects.equals(this.document5, notificacioV2.document5);
  }

  @Override
  public int hashCode() {
    return Objects.hash(emisorDir3Codi, organGestor, enviamentTipus, concepte, descripcio, enviamentDataProgramada, retard, caducitat, caducitatDiesNaturals, usuariCodi, procedimentCodi, grupCodi, numExpedient, enviaments, idioma, document, document2, document3, document4, document5);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NotificacioV2 {\n");
    
    sb.append("    emisorDir3Codi: ").append(toIndentedString(emisorDir3Codi)).append("\n");
    sb.append("    organGestor: ").append(toIndentedString(organGestor)).append("\n");
    sb.append("    enviamentTipus: ").append(toIndentedString(enviamentTipus)).append("\n");
    sb.append("    concepte: ").append(toIndentedString(concepte)).append("\n");
    sb.append("    descripcio: ").append(toIndentedString(descripcio)).append("\n");
    sb.append("    enviamentDataProgramada: ").append(toIndentedString(enviamentDataProgramada)).append("\n");
    sb.append("    retard: ").append(toIndentedString(retard)).append("\n");
    sb.append("    caducitat: ").append(toIndentedString(caducitat)).append("\n");
    sb.append("    caducitatDiesNaturals: ").append(toIndentedString(caducitatDiesNaturals)).append("\n");
    sb.append("    usuariCodi: ").append(toIndentedString(usuariCodi)).append("\n");
    sb.append("    procedimentCodi: ").append(toIndentedString(procedimentCodi)).append("\n");
    sb.append("    grupCodi: ").append(toIndentedString(grupCodi)).append("\n");
    sb.append("    numExpedient: ").append(toIndentedString(numExpedient)).append("\n");
    sb.append("    enviaments: ").append(toIndentedString(enviaments)).append("\n");
    sb.append("    idioma: ").append(toIndentedString(idioma)).append("\n");
    sb.append("    document: ").append(toIndentedString(document)).append("\n");
    sb.append("    document2: ").append(toIndentedString(document2)).append("\n");
    sb.append("    document3: ").append(toIndentedString(document3)).append("\n");
    sb.append("    document4: ").append(toIndentedString(document4)).append("\n");
    sb.append("    document5: ").append(toIndentedString(document5)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
