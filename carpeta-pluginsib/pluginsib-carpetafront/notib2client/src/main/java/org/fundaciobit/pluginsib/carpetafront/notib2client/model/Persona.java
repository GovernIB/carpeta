/*
 * API Interna NOTIB
 * API Interna de NOTIB
 *
 * OpenAPI spec version: v2.0
 * Contact: limit@limit.es
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package org.fundaciobit.pluginsib.carpetafront.notib2client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
/**
 * Representants a qui enviar l&#x27;enviament
 */
@Schema(description = "Representants a qui enviar l'enviament")


public class Persona {
  @JsonProperty("incapacitat")
  private Boolean incapacitat = false;

  /**
   * Enumerat que indica el tipus de l’interessat que realitza l’enviament.  * En cas d&#x27;indicar un interessat tipus FISICA_SENSE_NIF serà obligatori informar el camp documentTipus
   */
  public enum InteressatTipusEnum {
    ADMINISTRACIO("ADMINISTRACIO"),
    FISICA("FISICA"),
    JURIDICA("JURIDICA"),
    FISICA_SENSE_NIF("FISICA_SENSE_NIF");

    private String value;

    InteressatTipusEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static InteressatTipusEnum fromValue(String input) {
      for (InteressatTipusEnum b : InteressatTipusEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("interessatTipus")
  private InteressatTipusEnum interessatTipus = null;

  @JsonProperty("nom")
  private String nom = null;

  @JsonProperty("llinatge1")
  private String llinatge1 = null;

  @JsonProperty("llinatge2")
  private String llinatge2 = null;

  /**
   * Enumerat que indica el tipus de document aportat per l’interessat  * Aquest camp únicament es té en compte quan el tipus d’interessat és FISICA_SENSE_NIF
   */
  public enum DocumentTipusEnum {
    PASSAPORT("PASSAPORT"),
    ESTRANGER("ESTRANGER"),
    ALTRE("ALTRE");

    private String value;

    DocumentTipusEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static DocumentTipusEnum fromValue(String input) {
      for (DocumentTipusEnum b : DocumentTipusEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("documentTipus")
  private DocumentTipusEnum documentTipus = null;

  @JsonProperty("nif")
  private String nif = null;

  @JsonProperty("telefon")
  private String telefon = null;

  @JsonProperty("email")
  private String email = null;

  @JsonProperty("raoSocial")
  private String raoSocial = null;

  @JsonProperty("dir3Codi")
  private String dir3Codi = null;

  public Persona incapacitat(Boolean incapacitat) {
    this.incapacitat = incapacitat;
    return this;
  }

   /**
   * Indica si el titular es incapacitat per llegir/rebutjar la notificació. En aquest cas, seria obligatori informar un destinatari de l&#x27;enviament.
   * @return incapacitat
  **/
  @Schema(example = "false", description = "Indica si el titular es incapacitat per llegir/rebutjar la notificació. En aquest cas, seria obligatori informar un destinatari de l'enviament.")
  public Boolean isIncapacitat() {
    return incapacitat;
  }

  public void setIncapacitat(Boolean incapacitat) {
    this.incapacitat = incapacitat;
  }

  public Persona interessatTipus(InteressatTipusEnum interessatTipus) {
    this.interessatTipus = interessatTipus;
    return this;
  }

   /**
   * Enumerat que indica el tipus de l’interessat que realitza l’enviament.  * En cas d&#x27;indicar un interessat tipus FISICA_SENSE_NIF serà obligatori informar el camp documentTipus
   * @return interessatTipus
  **/
  @Schema(example = "FISICA", required = true, description = "Enumerat que indica el tipus de l’interessat que realitza l’enviament.  * En cas d'indicar un interessat tipus FISICA_SENSE_NIF serà obligatori informar el camp documentTipus")
  public InteressatTipusEnum getInteressatTipus() {
    return interessatTipus;
  }

  public void setInteressatTipus(InteressatTipusEnum interessatTipus) {
    this.interessatTipus = interessatTipus;
  }

  public Persona nom(String nom) {
    this.nom = nom;
    return this;
  }

   /**
   * Nom del titular.  * Obligatori en cas de persones físiques  * Mida màxima de 255 caràcters quan es tracta d&#x27;una administració  * Mida màxima de 30 caràcters per la resta de tipus d&#x27;interessats  * En el cas de persones jurídiques es posarà el nom en el camp raoSocial. En cas de no informar-se el camp raoSocial s&#x27;agafarà el valor indicat en aquest camp
   * @return nom
  **/
  @Schema(example = "Joan", description = "Nom del titular.  * Obligatori en cas de persones físiques  * Mida màxima de 255 caràcters quan es tracta d'una administració  * Mida màxima de 30 caràcters per la resta de tipus d'interessats  * En el cas de persones jurídiques es posarà el nom en el camp raoSocial. En cas de no informar-se el camp raoSocial s'agafarà el valor indicat en aquest camp")
  public String getNom() {
    return nom;
  }

  public void setNom(String nom) {
    this.nom = nom;
  }

  public Persona llinatge1(String llinatge1) {
    this.llinatge1 = llinatge1;
    return this;
  }

   /**
   * Primer llinatge de l’interessat  * Obligatori en cas de persones físiques
   * @return llinatge1
  **/
  @Schema(example = "Riera", description = "Primer llinatge de l’interessat  * Obligatori en cas de persones físiques")
  public String getLlinatge1() {
    return llinatge1;
  }

  public void setLlinatge1(String llinatge1) {
    this.llinatge1 = llinatge1;
  }

  public Persona llinatge2(String llinatge2) {
    this.llinatge2 = llinatge2;
    return this;
  }

   /**
   * Segon llinatge de l’interessat
   * @return llinatge2
  **/
  @Schema(example = "Servera", description = "Segon llinatge de l’interessat")
  public String getLlinatge2() {
    return llinatge2;
  }

  public void setLlinatge2(String llinatge2) {
    this.llinatge2 = llinatge2;
  }

  public Persona documentTipus(DocumentTipusEnum documentTipus) {
    this.documentTipus = documentTipus;
    return this;
  }

   /**
   * Enumerat que indica el tipus de document aportat per l’interessat  * Aquest camp únicament es té en compte quan el tipus d’interessat és FISICA_SENSE_NIF
   * @return documentTipus
  **/
  @Schema(example = "PASSAPORT", description = "Enumerat que indica el tipus de document aportat per l’interessat  * Aquest camp únicament es té en compte quan el tipus d’interessat és FISICA_SENSE_NIF")
  public DocumentTipusEnum getDocumentTipus() {
    return documentTipus;
  }

  public void setDocumentTipus(DocumentTipusEnum documentTipus) {
    this.documentTipus = documentTipus;
  }

  public Persona nif(String nif) {
    this.nif = nif;
    return this;
  }

   /**
   * Número del document de l&#x27;interessat  * Obligatori excepte per interessats tipus FISICA_SENSE_NIF
   * @return nif
  **/
  @Schema(example = "00000000T", description = "Número del document de l'interessat  * Obligatori excepte per interessats tipus FISICA_SENSE_NIF")
  public String getNif() {
    return nif;
  }

  public void setNif(String nif) {
    this.nif = nif;
  }

  public Persona telefon(String telefon) {
    this.telefon = telefon;
    return this;
  }

   /**
   * Telèfon de l’interessat  * Actualment no s’utilitza
   * @return telefon
  **/
  @Schema(example = "678123456", description = "Telèfon de l’interessat  * Actualment no s’utilitza")
  public String getTelefon() {
    return telefon;
  }

  public void setTelefon(String telefon) {
    this.telefon = telefon;
  }

  public Persona email(String email) {
    this.email = email;
    return this;
  }

   /**
   * Correu electrònic de l’interessat.   * Altament recomanat el seu ús.
   * @return email
  **/
  @Schema(example = "persona@correu.es", description = "Correu electrònic de l’interessat.   * Altament recomanat el seu ús.")
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }

  public Persona raoSocial(String raoSocial) {
    this.raoSocial = raoSocial;
    return this;
  }

   /**
   * Raó social de l’interessat  * S’utilitza únicament en cas de persones jurídiques, i si no s’informa aquest camp, s’utilitzarà el valor del camp nom. És obligatori que un dels dos camps estigui informat
   * @return raoSocial
  **/
  @Schema(example = "Amazon ltd.", description = "Raó social de l’interessat  * S’utilitza únicament en cas de persones jurídiques, i si no s’informa aquest camp, s’utilitzarà el valor del camp nom. És obligatori que un dels dos camps estigui informat")
  public String getRaoSocial() {
    return raoSocial;
  }

  public void setRaoSocial(String raoSocial) {
    this.raoSocial = raoSocial;
  }

  public Persona dir3Codi(String dir3Codi) {
    this.dir3Codi = dir3Codi;
    return this;
  }

   /**
   * Codi DIR3 de la administració a la que pertany la persona.  * Obligatori si s’ha d’enviar a una administració.
   * @return dir3Codi
  **/
  @Schema(example = "A04035965", required = true, description = "Codi DIR3 de la administració a la que pertany la persona.  * Obligatori si s’ha d’enviar a una administració.")
  public String getDir3Codi() {
    return dir3Codi;
  }

  public void setDir3Codi(String dir3Codi) {
    this.dir3Codi = dir3Codi;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Persona persona = (Persona) o;
    return Objects.equals(this.incapacitat, persona.incapacitat) &&
        Objects.equals(this.interessatTipus, persona.interessatTipus) &&
        Objects.equals(this.nom, persona.nom) &&
        Objects.equals(this.llinatge1, persona.llinatge1) &&
        Objects.equals(this.llinatge2, persona.llinatge2) &&
        Objects.equals(this.documentTipus, persona.documentTipus) &&
        Objects.equals(this.nif, persona.nif) &&
        Objects.equals(this.telefon, persona.telefon) &&
        Objects.equals(this.email, persona.email) &&
        Objects.equals(this.raoSocial, persona.raoSocial) &&
        Objects.equals(this.dir3Codi, persona.dir3Codi);
  }

  @Override
  public int hashCode() {
    return Objects.hash(incapacitat, interessatTipus, nom, llinatge1, llinatge2, documentTipus, nif, telefon, email, raoSocial, dir3Codi);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Persona {\n");
    
    sb.append("    incapacitat: ").append(toIndentedString(incapacitat)).append("\n");
    sb.append("    interessatTipus: ").append(toIndentedString(interessatTipus)).append("\n");
    sb.append("    nom: ").append(toIndentedString(nom)).append("\n");
    sb.append("    llinatge1: ").append(toIndentedString(llinatge1)).append("\n");
    sb.append("    llinatge2: ").append(toIndentedString(llinatge2)).append("\n");
    sb.append("    documentTipus: ").append(toIndentedString(documentTipus)).append("\n");
    sb.append("    nif: ").append(toIndentedString(nif)).append("\n");
    sb.append("    telefon: ").append(toIndentedString(telefon)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    raoSocial: ").append(toIndentedString(raoSocial)).append("\n");
    sb.append("    dir3Codi: ").append(toIndentedString(dir3Codi)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
