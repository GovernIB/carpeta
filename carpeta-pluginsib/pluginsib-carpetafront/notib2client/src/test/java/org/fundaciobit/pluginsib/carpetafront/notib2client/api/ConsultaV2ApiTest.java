/*
 * API Interna NOTIB
 * API Interna de NOTIB
 *
 * OpenAPI spec version: v2.0
 * Contact: limit@limit.es
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package org.fundaciobit.pluginsib.carpetafront.notib2client.api;

import org.fundaciobit.pluginsib.carpetafront.notib2client.model.Arxiu;
import org.joda.time.DateTime;
import org.fundaciobit.pluginsib.carpetafront.notib2client.model.RespostaConsultaV2;
import org.fundaciobit.pluginsib.carpetafront.notib2client.services.ApiClient;
import org.fundaciobit.pluginsib.carpetafront.notib2client.services.auth.HttpBasicAuth;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;


/**
 * API tests for ConsultaV2Api
 */
@Ignore
public class ConsultaV2ApiTest {

    private static final ConsultaV2Api api;
    
    static {
        
        String url="https://se.caib.es/notibapi/interna/";
        String user="$carpeta_notib";
        String pass="carpeta_notib";
        
        
        ApiClient apiClient = new ApiClient();
        
        
        
        apiClient.setBasePath(url);
        HttpBasicAuth basicAuth = (HttpBasicAuth) apiClient.getAuthentication("basic");
        basicAuth.setUsername(user);
        basicAuth.setPassword(pass);

        api = new ConsultaV2Api(apiClient);
        
        
        
    }
    
    
    public static void main(String[] args) {
        try {
            new ConsultaV2ApiTest().notificacionsByTitularTest();
        } catch (Exception e) {
            e.printStackTrace();
        }
        
    }
    
    
    /**
     * Consulta totes les comunicacions d&#x27;un titular donat el seu dni
     *
     * Retorna informació de totes les comunicacions d&#x27;un titular, i el seu estat
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void comunicacionsByTitularTest() throws Exception {
        String dniTitular = null;
        DateTime dataInicial = null;
        DateTime dataFinal = null;
        Boolean visibleCarpeta = null;
        String lang = null;
        Integer pagina = null;
        Integer mida = null;
        RespostaConsultaV2 response = api.comunicacionsByTitular(dniTitular, dataInicial, dataFinal, visibleCarpeta, lang, pagina, mida);

        // TODO: test validations
    }
    /**
     * Consulta totes les comunicacions llegides d&#x27;un titular donat el seu dni
     *
     * Retorna informació sobre les comunicacions ja llegides d&#x27;un titular, i el seu estat
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void comunicacionsLlegidesByTitularTest() throws Exception {
        String dniTitular = null;
        DateTime dataInicial = null;
        DateTime dataFinal = null;
        Boolean visibleCarpeta = null;
        String lang = null;
        Integer pagina = null;
        Integer mida = null;
        RespostaConsultaV2 response = api.comunicacionsLlegidesByTitular(dniTitular, dataInicial, dataFinal, visibleCarpeta, lang, pagina, mida);

        // TODO: test validations
    }
    /**
     * Consulta totes les comunicacions pendents (no llegides) d&#x27;un titular donat el seu dni
     *
     * Retorna informació sobre les comunicacions pendents d&#x27;un titular, i el seu estat
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void comunicacionsPendentsByTitularTest() throws Exception {
        String dniTitular = null;
        DateTime dataInicial = null;
        DateTime dataFinal = null;
        Boolean visibleCarpeta = null;
        String lang = null;
        Integer pagina = null;
        Integer mida = null;
        RespostaConsultaV2 response = api.comunicacionsPendentsByTitular(dniTitular, dataInicial, dataFinal, visibleCarpeta, lang, pagina, mida);

        // TODO: test validations
    }
    /**
     * Obté la certificació d&#x27;una notificació
     *
     * Retorna el document de certificació de lectura de la notificació. El contingut del document està en Base64
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getCertificacioTest() throws Exception {
        Long enviamentId = null;
        Arxiu response = api.getCertificacio(enviamentId);

        // TODO: test validations
    }
    /**
     * Obté el document d&#x27;una notificació
     *
     * Retorna el document de la notificació. El contingut del document està en Base64
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getDocumentTest() throws Exception {
        Long notificacioId = null;
        Arxiu response = api.getDocument(notificacioId);

        // TODO: test validations
    }
    /**
     * Obté el justificant d&#x27;una comunicació
     *
     * Retorna el document de justificant de entrega de la comunicació. El contingut del document està en Base64
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getJustificantTest() throws Exception {
        Long enviamentId = null;
        Arxiu response = api.getJustificant(enviamentId);

        // TODO: test validations
    }
    /**
     * Consulta totes les notificacions d&#x27;un titular donat el seu dni
     *
     * Retorna informació de totes les notificacions d&#x27;un titular, i el seu estat
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void notificacionsByTitularTest() throws Exception {
        String dniTitular = "99999999R";
        DateTime dataInicial = null;
        DateTime dataFinal = null;
        Boolean visibleCarpeta = null;
        String lang = null;
        Integer pagina = null;
        Integer mida = null;
        RespostaConsultaV2 response = api.notificacionsByTitular(dniTitular, dataInicial, dataFinal, visibleCarpeta, lang, pagina, mida);
        if(response != null) {
            System.out.println("Response = "+ response);
            System.out.println("Response = "+ response.getEmisor());
            System.out.println("Response = "+ response.getEmisor().size());
        }else {
            
            System.out.println("Response = null!!!!!!");
        }
        
        
           

        // TODO: test validations
    }
    /**
     * Consulta totes les notificacions llegides d&#x27;un titular donat el seu dni
     *
     * Retorna informació sobre les notificacions ja llegides d&#x27;un titular, i el seu estat
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void notificacionsLlegidesByTitularTest() throws Exception {
        String dniTitular = null;
        DateTime dataInicial = null;
        DateTime dataFinal = null;
        Boolean visibleCarpeta = null;
        String lang = null;
        Integer pagina = null;
        Integer mida = null;
        RespostaConsultaV2 response = api.notificacionsLlegidesByTitular(dniTitular, dataInicial, dataFinal, visibleCarpeta, lang, pagina, mida);

        // TODO: test validations
    }
    /**
     * Consulta totes les notificacions pendents (no llegides) d&#x27;un titular donat el seu dni
     *
     * Retorna informació sobre les notificacions pendents d&#x27;un titular, i el seu estat
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void notificacionsPendentsByTitularTest() throws Exception {
        String dniTitular = null;
        DateTime dataInicial = null;
        DateTime dataFinal = null;
        Boolean visibleCarpeta = null;
        String lang = null;
        Integer pagina = null;
        Integer mida = null;
        RespostaConsultaV2 response = api.notificacionsPendentsByTitular(dniTitular, dataInicial, dataFinal, visibleCarpeta, lang, pagina, mida);

        // TODO: test validations
    }
}
